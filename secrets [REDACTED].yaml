homeassistant_latitude: [REDACTED]
homeassistant_longitude: [REDACTED]
homeassistant_elevation: [REDACTED]

recorder_db_url: mysql://homeassistant:[REDACTED PASSWORD]@[REDACTED IP]/homeassistant?charset=utf8mb4

iphonedetect_mattias: [REDACTED IP]
iphonedetect_sanja: [REDACTED IP]

wemo_static:
  - [REDACTED IP]

spotify_client_id: [REDACTED]
spotify_client_secret: [REDACTED]

tibber_token: Bearer [REDACTED]
darksky_api_key: [REDACTED]

xiaomi_vacuum_host: [REDACTED]
xiaomi_vacuum_token: [REDACTED]
xiaomi_cloud_username: [REDACTED]
xiaomi_cloud_password: [REDACTED]

github_username: [REDACTED]
github_access_token: [REDACTED]

google_client_id: [REDACTED]
google_client_secret: [REDACTED]

caldav_username: [REDACTED]
caldav_password: [REDACTED]

plex_token: [REDACTED]
plex_host: [REDACTED IP]
plex_port: [REDACTED PORT]

unifi_host: [REDACTED IP]
unifi_username: [REDACTED]
unifi_password: [REDACTED]
unifi_poweroff: ssh -q -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] poweroff
unifi_reboot: ssh -q -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] reboot
udm_unifios: |-
  data='{"username":"[REDACTED]","password":"[REDACTED]"}'; ip='https://[REDACTED]:443';\
  c=$(curl -H 'Content-Type: application/json' -d $data -ksc - $ip/api/auth/login -o /dev/null);\
  echo "${c}" | curl -ksb - $ip/proxy/network/api/s/default/stat/device/

influxdb_host: [REDACTED IP]

jwst_scrape: ssh -q -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] 'python3 jwst.py 2>/dev/null'

playstation_5_state: /config/www/ps5.py -b [REDACTED IP]
playstation_5_wake: ssh -q -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] 'docker exec playactor sh -c "playactor wake --host-name PS5-635" 2>/dev/null'
playstation_5_sleep: ssh -q -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] 'docker exec playactor sh -c "playactor standby --host-name PS5-635" 2>/dev/null'
playactor_version_installed: ssh -q -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] 'docker exec playactor sh -c "playactor about" 2>/dev/null'

switchbot_mqtt_command: homeassistant/switch/switchbot/[REDACTED MAC]/set
switchbot_mqtt_state: homeassistant/switch/switchbot/[REDACTED MAC]/state
switchbot_mqtt_battery: homeassistant/switch/switchbot/[REDACTED MAC]/battery-percentage

homekit_ip_address: [REDACTED IP]
skanetrafiken: https://api.resrobot.se/v2/trip?key=[REDACTED]&originCoordLat=[REDACTED]&originCoordLong=[REDACTED]&destId=[REDACTED]&format=json

ha_dockermon_cpu: [REDACTED IP]/container/home-assistant/stats
monitor_docker_rpi_url: tcp://[REDACTED IP]

wake_on_lan_mac: [REDACTED MAC]
wake_on_lan_host: [REDACTED IP]

kemper_version: >
  ssh -q -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] /usr/local/bin/python3 kemper-version/kemper-version.py || echo '{"profiler_latest": "", "profiler_installed": "", "rigmanager_latest": "", "rigmanager_installed": ""}'
waste_collection_schedule_url: https://nsr.se/wp/wp-admin/admin-ajax.php?action=fetchDataFromFetchPlannerCalendar&query=[REDACTED]

rpi_sd: ssh -q -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] df / | awk '{print $5}' | tail -n 1 2>/dev/null
rpi_mem: ssh -q -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] free | grep Mem | awk '{print $3 / $2 * 100}' 2>/dev/null
rpi_cpu: ssh -q -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] top -bn 1 | grep "Cpu(s)" | awk '{print 100 - $8}' 2>/dev/null
rpi_uptime: ssh -q -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] uptime -s 2>/dev/null
rpi_poweroff: ssh -q -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] sudo shutdown -h now
rpi_reboot: ssh -q -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] sudo reboot
rpi_led_off: ssh -q -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] "sudo sh -c 'echo 0 > /sys/class/leds/led0/brightness' && sudo sh -c 'echo 0 > /sys/class/leds/led1/brightness'"
rpi_ping_host: [REDACTED IP]

imac_off: ssh -q -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] sudo /sbin/shutdown -h now 2>/dev/null
imac_sleep: ssh -q -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] sudo /sbin/shutdown -s now 2>/dev/null
imac_restart: ssh -q -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] sudo /sbin/shutdown -r now 2>/dev/null
imac_ip: ssh -q -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] dig +short myip.opendns.com @resolver1.opendns.com || echo 0

imac_cpu: ssh -q -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] top -l 1 | awk '/CPU usage/ {print $7}' 2>/dev/null
imac_mem: ssh -q -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] ps -A -o %mem | awk '{ mem += $1} END {print mem}' 2>/dev/null
imac_uptime: ssh -q -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] sysctl -n kern.boottime | awk '{print $4}' 2>/dev/null

monitors_mute_on: ssh -q -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] 'osascript -e "set volume with output muted" 2>/dev/null'
monitors_mute_off: ssh -q -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] 'osascript -e "set volume without output muted" 2>/dev/null'
monitors_mute_state: ssh -q -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] 'osascript -e "output muted of (get volume settings)"' || echo false
monitors_volume_slider: ssh -q -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] 'osascript -e "set volume output volume {{ states('input_number.monitors_volume') | int }} --100%" 2>/dev/null'
monitors_update_volume: ssh -q -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] 'osascript -e "output volume of (get volume settings)"' || echo 0

reference_monitors: |-
  ssh -q -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] osascript <<EOF
    tell application "System Events"
      click menu bar item 1 of menu bar 2 of application process "SoundID Reference"
      click menu item "KRK (28 Sep)" of menu 1 of menu bar 2 of application process "SoundID Reference"
    end tell
  EOF
reference_headphones: |-
  ssh -q -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa [REDACTED USER@IP] osascript <<EOF
    tell application "System Events"
      click menu bar item 1 of menu bar 2 of application process "SoundID Reference"
      click menu item "Beyerdynamic DT 990 Pro 250 Ohm Wired Av..." of menu 1 of menu bar 2 of application process "SoundID Reference"
    end tell
  EOF

ir_fan_power: b64:[REDACTED IR]
ir_fan_swing: b64:[REDACTED IR]
ir_fan_speed: b64:[REDACTED IR]

ir_purifier_power: b64:[REDACTED IR]
ir_purifier_auto: b64:[REDACTED IR]
ir_purifier_speed_down: b64:[REDACTED IR]
ir_purifier_speed_up: b64:[REDACTED IR]
ir_purifier_turbo: b64:[REDACTED IR]

ir_ac_power: b64:[REDACTED IR]
ir_ac_swing: b64:[REDACTED IR]
ir_ac_speed_up: b64:[REDACTED IR]
ir_ac_speed_down: b64:[REDACTED IR]
